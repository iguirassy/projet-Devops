pipeline {
    agent any
    environment {
        DOCKER_VERSION = 'latest'
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/votre-utilisateur/projet-devops.git'
            }
        }

        stage('Install Docker (si nécessaire)') {
            steps {
                script {
                    def dockerInstalled = sh(script: 'which docker || true', returnStdout: true).trim()
                    if (!dockerInstalled) {
                        echo 'Docker non installé, installation en cours...'
                        sh '''
                            sudo apt update
                            sudo apt install -y \
                                ca-certificates \
                                curl \
                                gnupg \
                                lsb-release

                            sudo mkdir -p /etc/apt/keyrings
                            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

                            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

                            sudo apt update
                            sudo apt install -y docker-ce docker-ce-cli containerd.io
                        '''
                    } else {
                        echo 'Docker est déjà installé.'
                    }
                }
            }
        }

        stage('Test Docker') {
            steps {
                sh 'docker --version'
                sh 'docker run hello-world'
            }
        }
    }

    post {
        success {
            echo "Pipeline exécuté avec succès !"
        }
        failure {
            echo "Une erreur est survenue."
        }
    }
}

